#pragma once
#ifndef FUNCS
#define FUNCS

#include "libraries.h"


/********************************************
* Portable Executable function declarations *
*********************************************/

void fill_PE_fields(pFile file);
void fillSectionHeadersList(pFile file);
void fillSectionList(pFile file);
void dumpFeaturesOfSections(PSECTION* sectionsList, int numberOfSections);

/*************************************
* File-related function declarations *
**************************************/

HANDLE openFile(LPCSTR filename);
HANDLE check_file(pFile file);

/**************************************
* Prompt-related function declarations*
***************************************/

void getInput(int state, void** stateVar, void *param3);
void printSectionsToScreen(PIMAGE_SECTION_HEADER* sectionHeadersList, DWORD numberOfSections);
int getNumberSequence(int** numberOfArray, int state, void* param3);
void print_decryption_mechanism(PSECTION section);

/**************************************
* Encryption function declarations*
***************************************/

void print_var_to_add(int shellcodesize);

void segment1(int* flowModifier, uint32_t** str, uint32_t** bytes, char* begStr, int payloadSize);
void segment2(int* flowModifier, uint16_t** str, uint16_t** bytes, char* begStr, int payloadSize);
void segment3(int* flowModifier, uint16_t** str, uint16_t** bytes, char* begStr, int payloadSize);
void segment4(int* flowModifier, uint16_t** str, uint16_t** bytes, char* begStr, int payloadSize);
void segment5(int* flowModifier, uint96_t** str, uint96_t** bytes, char* begStr, int payloadSize);
char* UUID_Obfuscation(char* str, int PayloadSize, DWORD* numberOfOutBytes);

int eklenecekbytesayisinibul(char** words, int numberOfWord);
char* decreaseEntropy(unsigned char* shellcode, DWORD size, int* newshellcodesize, int rate);

void fill_section_by_same_bytes(char* sectionBeginAddress);

char* base64_encode(const unsigned char* data, size_t input_length, DWORD* output_length);

/******************************
* Helper function declarations*
*******************************/

pFile findFile(HANDLE hFile);
void* my_memcpy(char* dest, const void* src, size_t n);
void encrypt_file(pFile file);
char* basename(char* filename);
int check_file_existence(char** filename, int state);
int check_RVAs(pFile f1, pFile f2);

/*******************************************
* Program initialize function declarations *
********************************************/

void Sahiden_iyi_mi_geceler();
void init();

#endif