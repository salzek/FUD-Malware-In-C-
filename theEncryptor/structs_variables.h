#pragma once

#include <stdint.h>
#include <windef.h>

#define FILE_TO_ENCRYPT  0
#define SECT_TO_ENCRYPT  1
#define TYPE_OF_ENCRYPT  2
#define CHECK_FILE      -1
#define SAME_BYTE_VAL   0xEA
#define ENCRYPTION_METHODS_COUNT 3



typedef struct {
    uint64_t low;
    uint32_t high;
} uint96_t;

typedef struct {
    char encID;
    char strVar[50];
    size_t beforeSize;
    size_t afterSize;
    int rate;
}EncryptionInfo, * pEncryptionInfo;

typedef struct {
    char name[IMAGE_SIZEOF_SHORT_NAME];
    DWORD pointerToRawData;
    DWORD SizeOfRawData;
    DWORD RVA;
    byte  *sectionAddr;
    byte  *sectionLastAddr;
    int   *encryption_methods;
    int   numberOfencryptionMethods;
    DWORD SizeOfRawDataAfterEnc;
    pEncryptionInfo* EncInfos;
}Section, * PSECTION;

typedef struct {
    byte *imagebase;
    DWORD numberOfSections;
    PIMAGE_DOS_HEADER dosHeader;
    PIMAGE_FILE_HEADER fileHeader;
    PIMAGE_OPTIONAL_HEADER optionalHeader;
    PIMAGE_NT_HEADERS ntHeader;
    PIMAGE_SECTION_HEADER *sectionHeadersList;
    PSECTION *sectionsList;
}PE, * PPE;

typedef struct {
    HANDLE handle;
    DWORD size;
    char filename[MAX_PATH];
    PPE pe;
    int* sections_to_encrypt;
    int numberOfSectionsToEncrypt;
}File, * pFile;


pFile* fileList;;

static int numberOfFile = 0;

static char encoding_table[] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
                                'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                                'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
                                'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
                                'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
                                'w', 'x', 'y', 'z', '0', '1', '2', '3',
                                '4', '5', '6', '7', '8', '9', '+', '/' };
static int mod_table[] = { 0, 2, 1 };


char Path[260];
File _file;
PE _pe;
PPE pe;
PSECTION section;
pFile file;
BOOL fResult;
int* encryption_methods;
int rate, base64;


